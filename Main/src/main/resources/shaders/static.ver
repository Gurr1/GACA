#version 330

in vec3 pos;
in vec2 tex;
in vec3 nor;
in vec4 tangent;

layout (std140) uniform MODEL {
	mat4 WORLD;
};

layout (std140) uniform VIEW {
	vec3 CAMPOSWORLD;
	mat4 CAMERA;
	mat4 PERSPECTIVE;
};

layout (std140) uniform CLIP_PLANES {
	vec4 CLIP_PLANE;
	vec4 CLIP_PLANE2;
};

out vec2 texCoords;
out vec3 normals;

void main(){
	texCoords = tex;
	normals = nor;
	
	vec4 finalPos = vec4(pos, 1.0f);
	gl_ClipDistance[0] = dot(CLIP_PLANE, finalPos);
	
	gl_Position = PERSPECTIVE * CAMERA * WORLD * finalPos;
}